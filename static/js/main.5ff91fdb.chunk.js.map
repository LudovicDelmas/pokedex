{"version":3,"sources":["models/mock-pokemon.ts","helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","pages/pokemon-list.tsx","pages/pokemon-detail.tsx","App.tsx","index.tsx"],"names":["POKEMONS","id","name","pv","cp","picture","types","created","Date","formatDate","date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","className","onMouseEnter","onMouseLeave","style","src","alt","map","key","PokemonList","pokemons","setPokemons","useEffect","PokemonsDetail","match","setPokemon","forEach","params","toString","width","margin","to","App","exact","path","component","PokemonDetail","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ff91fdb.chunk.js","sourcesContent":["import Pokemon from './pokemon';\n   \nexport const POKEMONS: Pokemon[] = [\n {\n    \n  id: 1,\n  name: \"Bulbizarre\",\n  pv: 45,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  pv: 39,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  pv: 44,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  pv: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  pv: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  pv: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  pv: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  pv: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  pv: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  pv: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  pv: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Goupix\",\n  pv: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n  \nexport default POKEMONS;","const formatDate = (date: Date): string => {\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n}\n\nexport default formatDate;","const formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'yellow darken-3'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n}\n\nexport default formatType;","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\n\ntype Props = {\n    pokemon: Pokemon,\n    borderColor?: string\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n    const [color, setColor] = useState<string>();\n\n    const showBorder = () =>{\n      setColor(borderColor);\n    }\n\n    const hideBorder = () =>{\n      setColor('#f5f5f5');\n    }\n\n    return(\n        <div className=\"col s6 m4\" onMouseEnter = {showBorder} onMouseLeave = {hideBorder}>\n        <div className=\"card horizontal\" style={{ borderColor: color }}>\n          <div className=\"card-image\"> \n            <img src={pokemon.picture} alt={pokemon.name}/>\n          </div>\n          <div className=\"card-stacked\">\n            <div className=\"card-content\">\n              <p>{pokemon.name}</p>\n              <p><small>{formatDate(pokemon.created)}</small></p>\n              {pokemon.types.map(type => (\n                <span key={type} className={formatType(type)}>{type}</span>\n              ))}\n            </div>\n          </div>\n        </div> \n      </div>\n    );\n}\n\nexport default PokemonCard;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport POKEMONS from '../models/mock-pokemon';\nimport PokemonCard from '../components/pokemon-card';\n  \nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  \n  useEffect(() => {\n    setPokemons(POKEMONS);\n  }, []);\n  \n  return (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\"> \n        <div className=\"row\"> \n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon}/>\n        ))}\n        </div>\n      </div>\n    </div> \n  );\n}\n  \nexport default PokemonList;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport POKEMONS from '../models/mock-pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    POKEMONS.forEach(pokemon => {\n      if (match.params.id === pokemon.id.toString()) {\n        setPokemon(pokemon);\n      }\n    })\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.pv }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\">Aucun pokémon à afficher !</h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, {FunctionComponent  } from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport PokemonDetail from './pages/pokemon-detail';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\n\n\n  \nconst App: FunctionComponent = () => {\n\n \n\n return (\n    <Router>\n       <div>\n          <nav>\n             <div className=\"nav-wrapper teal\">\n                <Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\n             </div>\n          </nav>\n          <Switch>\n             <Route exact path = \"/\" component = {PokemonList}/>\n             <Route exact path = \"/pokemons\" component = {PokemonList} />\n             <Route path = \"/pokemons/:id\" component = {PokemonDetail} />\n          </Switch>\n       </div>\n    </Router>\n )\n}\n\n\n\n  \nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}