{"version":3,"sources":["models/mock-pokemon.ts","helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","pages/pokemon-list.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","App.tsx","index.tsx"],"names":["POKEMONS","id","name","pv","cp","picture","types","created","Date","formatDate","date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onClick","push","onMouseEnter","onMouseLeave","style","src","alt","map","key","PokemonList","pokemons","setPokemons","useEffect","PokemonsDetail","match","setPokemon","forEach","params","toString","width","margin","to","PageNotFound","PokemonForm","htmlFor","marginBottom","PokemonEdit","App","exact","path","component","PokemonDetail","ReactDom","render","document","getElementById"],"mappings":"2OA+KeA,EA7KoB,CAClC,CAECC,GAAI,EACJC,KAAM,aACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,SAAU,UAClBC,QAAS,IAAIC,MAEd,CAEEP,GAAI,EACJC,KAAM,aACNC,GAAI,GACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CAAC,SAAU,UAClBC,QAAS,IAAIC,MAGf,CAEEP,GAAI,EACJC,KAAM,aACNC,GAAI,GACJC,GAAI,GACJC,QAAS,oEACTC,MAAO,CAAC,SAAU,UAClBC,QAAS,IAAIC,MAEf,CAECP,GAAI,EACJC,KAAM,eACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,MAEd,CAECP,GAAI,EACJC,KAAM,YACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,MAEd,CAECP,GAAI,EACJC,KAAM,YACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,MAAM,OACdC,QAAS,IAAIC,MAGd,CACCP,GAAI,EACJC,KAAM,WACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,MAEd,CACGP,GAAI,EACJC,KAAM,YACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,MAEhB,CACGP,GAAI,EACJC,KAAM,YACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,MAEhB,CACCP,GAAI,GACJC,KAAM,UACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UAAW,UACnBC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,UACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,SAAU,OAClBC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,UACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,WACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,SAAU,OAClBC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,MACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,UACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,YACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,YACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,gBACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,UACRC,QAAS,IAAIC,MAEd,CACCP,GAAI,GACJC,KAAM,SACNC,GAAI,GACJC,GAAI,EACJC,QAAS,oEACTC,MAAO,CAAC,OACRC,QAAS,IAAIC,OCvKAC,G,MAJI,SAACC,GAChB,MAAM,GAAN,OAAUA,EAAKC,UAAf,YAA4BD,EAAKE,WAAW,EAA5C,YAAiDF,EAAKG,iBC4C3CC,EA7CI,SAACC,GAChB,IAAIC,EAEJ,OAAQD,GACN,IAAK,MACHC,EAAQ,gBACR,MACF,IAAK,MACHA,EAAQ,iBACR,MACF,IAAK,SACHA,EAAQ,kBACR,MACF,IAAK,UACHA,EAAQ,kBACR,MACF,IAAK,SACHA,EAAQ,iBACR,MACF,IAAK,MACHA,EAAQ,iBACR,MACF,IAAK,SACHA,EAAQ,uBACR,MACF,IAAK,SACHA,EAAQ,iBACR,MACF,IAAK,MACHA,EAAQ,uBACR,MACF,IAAK,WACHA,EAAQ,gBACR,MACF,IAAK,SACHA,EAAQ,cACR,MACF,QACEA,EAAQ,OAIZ,MAAM,QAAN,OAAeA,I,OCMJC,EApC+B,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,QAAsC,IAA7BC,mBAA6B,MAAf,UAAe,IACxDC,qBADwD,mBAC3EJ,EAD2E,KACpEK,EADoE,KAE5EC,EAAUC,cAchB,OACI,yBAAKC,UAAU,YAAYC,QAAW,kBALrBxB,EAKuCiB,EAAQjB,QAJlEqB,EAAQI,KAAR,oBAA0BzB,IADR,IAACA,GAKoD0B,aAbtD,WACjBN,EAASF,IAY0FS,aATlF,WACjBP,EAAS,aASP,yBAAKG,UAAU,kBAAkBK,MAAO,CAAEV,YAAaH,IACrD,yBAAKQ,UAAU,cACb,yBAAKM,IAAKZ,EAAQb,QAAS0B,IAAKb,EAAQhB,QAE1C,yBAAKsB,UAAU,gBACb,yBAAKA,UAAU,gBACb,2BAAIN,EAAQhB,MACZ,2BAAG,+BAAQO,EAAWS,EAAQX,WAC7BW,EAAQZ,MAAM0B,KAAI,SAAAjB,GAAI,OACrB,0BAAMkB,IAAKlB,EAAMS,UAAWV,EAAWC,IAAQA,WCbhDmB,EArBwB,WAAO,IAAD,EACXd,mBAAoB,IADT,mBACpCe,EADoC,KAC1BC,EAD0B,KAO3C,OAJAC,qBAAU,WACRD,EAAYpC,KACX,IAGD,6BACE,wBAAIwB,UAAU,UAAd,cACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACdW,EAASH,KAAI,SAAAd,GAAO,OACnB,kBAAC,EAAD,CAAae,IAAKf,EAAQjB,GAAIiB,QAASA,W,OC4DlCoB,EArEwD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAEtDnB,mBAAuB,MAF+B,mBAE7EF,EAF6E,KAEpEsB,EAFoE,KAYpF,OARAH,qBAAU,WACRrC,EAASyC,SAAQ,SAAAvB,GACXqB,EAAMG,OAAOzC,KAAOiB,EAAQjB,GAAG0C,YACjCH,EAAWtB,QAGd,CAACqB,EAAMG,OAAOzC,KAGf,6BACIiB,EACA,yBAAKM,UAAU,OACb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,iBAAkBN,EAAQhB,MACxC,yBAAKsB,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKM,IAAKZ,EAAQb,QAAS0B,IAAKb,EAAQhB,KAAM2B,MAAO,CAACe,MAAO,QAASC,OAAQ,YAC9E,kBAAC,IAAD,CAAMC,GAAE,yBAAsB5B,EAAQjB,IAAMuB,UAAU,yDACpD,uBAAGA,UAAU,kBAAb,UAGJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,2BAAOA,UAAU,oBACf,+BACE,4BACE,mCACA,4BAAI,gCAAUN,EAAQhB,QAExB,4BACE,6CACA,4BAAI,gCAAUgB,EAAQf,MAExB,4BACE,4CACA,4BAAI,gCAAUe,EAAQd,MAExB,4BACE,qCACA,4BACGc,EAAQZ,MAAM0B,KAAI,SAAAjB,GAAI,OACtB,0BAAMkB,IAAKlB,EAAMS,UAAWV,EAAWC,IAAQA,QAGpD,4BACE,mDACA,4BAAKN,EAAWS,EAAQX,cAKhC,yBAAKiB,UAAU,eACb,kBAAC,IAAD,CAAMsB,GAAG,YAAT,eAOV,wBAAItB,UAAU,UAAd,sCCxDOuB,EAbyB,WAEtC,OACE,yBAAKvB,UAAU,UACb,yBAAKM,IAAI,iEAAiEC,IAAI,wBAC9E,8DACA,kBAAC,IAAD,CAAMe,GAAG,IAAItB,UAAU,oCAAvB,8BC0DSwB,EA3D+B,SAAC,GAAe,IAAd9B,EAAa,EAAbA,QAO9C,OACE,8BACE,yBAAKM,UAAU,OACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKM,IAAKZ,EAAQb,QAAS0B,IAAKb,EAAQhB,KAAM2B,MAAO,CAACe,MAAO,QAASC,OAAQ,aAEhF,yBAAKrB,UAAU,gBACb,yBAAKA,UAAU,gBAEb,yBAAKA,UAAU,cACb,2BAAOyB,QAAQ,QAAf,OACA,2BAAOhD,GAAG,OAAOc,KAAK,OAAOS,UAAU,kBAGzC,yBAAKA,UAAU,cACb,2BAAOyB,QAAQ,MAAf,gBACA,2BAAOhD,GAAG,KAAKc,KAAK,SAASS,UAAU,kBAGzC,yBAAKA,UAAU,cACb,2BAAOyB,QAAQ,MAAf,gBACA,2BAAOhD,GAAG,KAAKc,KAAK,SAASS,UAAU,kBAGzC,yBAAKA,UAAU,cACb,wCAhCQ,CACtB,SAAU,MAAO,MAAO,UAAW,SAAU,WAC7C,SAAU,YAAQ,MAAO,SAAU,OA+BdQ,KAAI,SAAAjB,GAAI,OACb,yBAAKkB,IAAKlB,EAAMc,MAAO,CAACqB,aAAc,SACpC,+BACE,2BAAOjD,GAAIc,EAAMA,KAAK,WAAWS,UAAU,cAC3C,8BACE,uBAAGA,UAAWV,EAAWC,IAASA,WAO9C,yBAAKS,UAAU,sBAEb,4BAAQT,KAAK,SAASS,UAAU,OAAhC,kBCvBD2B,EA1BqD,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MAAY,EAEnDnB,mBAAuB,MAF4B,mBAE1EF,EAF0E,KAEjEsB,EAFiE,KAYjF,OARAH,qBAAU,WACRrC,EAASyC,SAAQ,SAAAvB,GACXqB,EAAMG,OAAOzC,KAAOiB,EAAQjB,GAAG0C,YACjCH,EAAWtB,QAGd,CAACqB,EAAMG,OAAOzC,KAGf,6BACIiB,EACA,yBAAKM,UAAU,OACX,wBAAIA,UAAU,iBAAd,aAAuCN,EAAQhB,MAC/C,kBAAC,EAAD,CAAagB,QAASA,KAG1B,wBAAIM,UAAU,UAAd,sCCUO4B,EA7BgB,WAI9B,OACG,kBAAC,IAAD,KACG,6BAEG,6BACG,yBAAK5B,UAAU,oBACZ,kBAAC,IAAD,CAAMsB,GAAG,WAAWtB,UAAU,qBAA9B,gBAIN,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAO,WAAWC,UAAarB,IAC5C,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAO,YAAYC,UAAarB,IAC7C,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAO,qBAAqBC,UAAaJ,IACtD,kBAAC,IAAD,CAAOG,KAAO,gBAAgBC,UAAaC,IAC3C,kBAAC,IAAD,CAAOD,UAAaR,QCxBjCU,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.61561c8d.chunk.js","sourcesContent":["import Pokemon from './pokemon';\n   \nexport const POKEMONS: Pokemon[] = [\n {\n    \n  id: 1,\n  name: \"Bulbizarre\",\n  pv: 45,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n\n   id: 2,\n   name: \"Herbizarre\",\n   pv: 35,\n   cp: 10,\n   picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/002.png\",\n   types: [\"Plante\", \"Poison\"],\n   created: new Date()\n\n },\n {\n   \n   id: 3,\n   name: \"Florizarre\",\n   pv: 55,\n   cp: 40,\n   picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/003.png\",\n   types: [\"Plante\", \"Poison\"],\n   created: new Date()\n },\n {\n\n  id: 4,\n  name: \"Salamèche\",\n  pv: 39,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n\n  id: 5,\n  name: \"Reptincel\",\n  pv: 55,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/005.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n\n  id: 6,\n  name: \"Dracaufeu\",\n  pv: 85,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/006.png\",\n  types: [\"Feu\",\"Vol\"],\n  created: new Date()\n },\n\n {\n  id: 7,\n  name: \"Carapuce\",\n  pv: 44,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n    id: 8,\n    name: \"Carabaffe\",\n    pv: 64,\n    cp: 4,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/008.png\",\n    types: [\"Eau\"],\n    created: new Date()\n },\n {\n    id: 9,\n    name: \"Carabaffe\",\n    pv: 84,\n    cp: 4,\n    picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/009.png\",\n    types: [\"Eau\"],\n    created: new Date()\n },\n {\n  id: 10,\n  name: \"Aspicot\",\n  pv: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Roucool\",\n  pv: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Rattata\",\n  pv: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 13,\n  name: \"Piafabec\",\n  pv: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 14,\n  name: \"Abo\",\n  pv: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 15,\n  name: \"Pikachu\",\n  pv: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 16,\n  name: \"Sabelette\",\n  pv: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 17,\n  name: \"Mélofée\",\n  pv: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 18,\n  name: \"Goupix\",\n  pv: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n  \nexport default POKEMONS;","const formatDate = (date: Date): string => {\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n}\n\nexport default formatDate;","const formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'yellow darken-3'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n}\n\nexport default formatType;","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n \ntype Props = {\n    pokemon: Pokemon,\n    borderColor?: string\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n    const [color, setColor] = useState<string>();\n    const history = useHistory();\n\n    const showBorder = () =>{\n      setColor(borderColor);\n    }\n\n    const hideBorder = () =>{\n      setColor('#f5f5f5');\n    }\n\n    const goToPokemon = (id: number )=> {\n      history.push(`/pokemons/${id}`);\n    }\n\n    return(\n        <div className=\"col s6 m4\" onClick = {() => goToPokemon(pokemon.id)} onMouseEnter = {showBorder} onMouseLeave = {hideBorder}>\n        <div className=\"card horizontal\" style={{ borderColor: color }}>\n          <div className=\"card-image\"> \n            <img src={pokemon.picture} alt={pokemon.name}/>\n          </div>\n          <div className=\"card-stacked\">\n            <div className=\"card-content\">\n              <p>{pokemon.name}</p>\n              <p><small>{formatDate(pokemon.created)}</small></p>\n              {pokemon.types.map(type => (\n                <span key={type} className={formatType(type)}>{type}</span>\n              ))}\n            </div>\n          </div>\n        </div> \n      </div>\n    );\n}\n\nexport default PokemonCard;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport POKEMONS from '../models/mock-pokemon';\nimport PokemonCard from '../components/pokemon-card';\n  \nconst PokemonList: FunctionComponent = () => {\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n  \n  useEffect(() => {\n    setPokemons(POKEMONS);\n  }, []);\n  \n  return (\n    <div>\n      <h1 className=\"center\">Pokémon</h1>\n      <div className=\"container\"> \n        <div className=\"row\"> \n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon}/>\n        ))}\n        </div>\n      </div>\n    </div> \n  );\n}\n  \nexport default PokemonList;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport POKEMONS from '../models/mock-pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    POKEMONS.forEach(pokemon => {\n      if (match.params.id === pokemon.id.toString()) {\n        setPokemon(pokemon);\n      }\n    })\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to = {`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                  <i className=\"material-icons\">edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.pv }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/pokedex\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\">Aucun pokémon à afficher !</h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","import React, { FunctionComponent } from 'react';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\n  \ntype Props = {\n  pokemon: Pokemon\n};\n  \nconst PokemonForm: FunctionComponent<Props> = ({pokemon}) => {\n  \n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n   \n  return (\n    <form>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n            </div>\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" type=\"text\" className=\"form-control\"></input>\n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"pv\">Point de vie</label>\n                  <input id=\"pv\" type=\"number\" className=\"form-control\"></input>\n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" type=\"number\" className=\"form-control\"></input>\n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" className=\"filled-in\"></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n   \nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport POKEMONS from '../models/mock-pokemon';\n \ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    POKEMONS.forEach(pokemon => {\n      if (match.params.id === pokemon.id.toString()) {\n        setPokemon(pokemon);\n      }\n    })\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\">Aucun pokémon à afficher !</h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","import React, {FunctionComponent  } from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport PokemonDetail from './pages/pokemon-detail';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './pages/pokemon-edit';\n\n\n  \nconst App: FunctionComponent = () => {\n\n \n\n return (\n    <Router>\n       <div>\n          {/* La barre de navigation commune à toutes les pages */}\n          <nav>\n             <div className=\"nav-wrapper teal\">\n                <Link to=\"/pokedex\" className=\"brand-logo center\">Pokédex</Link>\n             </div>\n          </nav>\n            {/* Le systeème de gestion des routes de l'app */}\n          <Switch>\n             <Route exact path = \"/pokedex\" component = {PokemonList}/>\n             <Route exact path = \"/pokemons\" component = {PokemonList} />\n             <Route exact path = \"/pokemons/edit/:id\" component = {PokemonEdit} />\n             <Route path = \"/pokemons/:id\" component = {PokemonDetail} />\n             <Route component = {PageNotFound} />\n          </Switch>\n       </div>\n    </Router>\n )\n}\n\n\n\n  \nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}